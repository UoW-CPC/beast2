####TOSCA Definitions and Metadata#####
tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - https://raw.githubusercontent.com/micado-scale/tosca/v0.9.0/micado_types.yaml

repositories:
  docker_hub: https://hub.docker.com/

description: Run Beast2 in parallel (default 10), on some data stored in an external NFS share.  


#########MiCADO Worker Details##########
dsl_definitions:
  worker_properties: &worker_properties
    type: tosca.nodes.MiCADO.EC2.Compute
    properties:
      instance_type: t2.medium 
      region_name: eu-west-2
      image_id: ami-006a0174c6c25ac06
      security_group_ids:
        - sg-05
      key_name: key
      context:
        insert: true
        cloud_config: |
          runcmd:
          - apt-get install -y nfs-common
    interfaces:
      Occopus:
        create:
          inputs:
            endpoint: https://ec2.eu-west-2.amazonaws.com


topology_template:
  node_templates:

###########NFS Server Details############
    nfs-volume:
      type: tosca.nodes.MiCADO.Container.Volume.NFS
      properties:
        server: 123.456.7.89
        path: /nfs

#########Advanced configuration##########    
    beast:
      type: tosca.nodes.MiCADO.Container.Application.Docker.Deployment
      properties:      
        env:
        - name: FILE # XML file name
          value: "beast_data.xml"
        - name: DIR # Directory (existing) for this series of experiments
          value: "."
        image: uowcpc/beast2:seeded-ec2
        args: ["-threads -1", "-beagle_sse"]
        workingDir: /root/work
        resources:
          requests:
            cpu: "1800m"
      requirements:
        - host: worker 
        - volume:
            node: nfs-volume
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: /root/work

    worker: *worker_properties


####Monitoring & Scaling Configuration###
  policies:
    - monitoring:
        type: tosca.policies.Monitoring.MiCADO
        properties:
          enable_container_metrics: true
          enable_node_metrics: false 
    - scalability:
        type: tosca.policies.Scaling.MiCADO
        targets: [ worker ]
        properties:
          min_instances: &scale 10
          max_instances: *scale
    - scalability:
        type: tosca.policies.Scaling.MiCADO
        targets: [ beast ]
        properties:
          min_instances: *scale
          max_instances: *scale
